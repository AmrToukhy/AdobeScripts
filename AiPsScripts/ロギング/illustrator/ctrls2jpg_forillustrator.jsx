/*    Ctrls2jpg.jsx        ctrl+sを押すとJpgを吐き出し for Mac Illustrator    version: 1.0            Author : Takahiro Isihiyama    Mail : ishiyama@sirok.co.jp*///#include "ScriptListenerOn.jsx"#target 'illustrator';//ドキュメントが開かれているかどうか判別if (app.documents.length == 0);else main();/****************/function main(){   var docObj = app.activeDocument; //ファイル情報取得  saveFlag = docObj.saved;  //ドキュメントが保存されているかどうかを見て  if(!saveFlag){      var docPath = docObj.path; //ファイルパス    var docName = docObj.name; //ファイル名    var date = dateClass(); //現在時刻の取得    //alert(date);    publishJpg(date,docPath, docName);    docObj.save();  //上書き保存     }else docObj.save();  return;}/* fin main *///putLogfunction putLog(date, docPath, docName){    //macListenerPath  var logFile = File("~/Desktop/ScriptingListenerJS.log");  logFile.open("r");  history = logFile.read();//.split(/\/\/\s\=+/);    folderName = docPath +"\/log\/history\/";  folderObj = new Folder (folderName);  flag = folderObj.exists; //フォルダの有無  var fileRef = new File(folderName+"/"+docName.slice(0,-4)+"_"+date+".log");  fileRef.encoding = "UTF8"; //文字コードをUTF-8に  if(flag == false){   folderObj.create(); //フォルダがない場合にフォルダを作成  }	flag = fileRef.open ("w","","");	if(flag)   {        fileRef.writeln(history);	}  logFile.remove();  fileRef.close();} //現在時刻の取得function dateClass(){    //dTbl = new Array("日","月","火","水","木","金","土");  dObj = new Date();   while((new Date()).getTime() < dObj.getTime() + 1000*5){ //timeOut5秒      //日時の振り分け      year = dObj.getYear();      year2 = (year < 2000) ? year + 1900 : year;      month = dObj.getMonth() + 1;      day = dObj.getDate();      //day2 = dTbl[day];      h = dObj.getHours();      m = dObj.getMinutes();      s = dObj.getSeconds();            //alert(year2 + "年" + month +"月" + day +"日"+"("+day2+")"+ h+"時"+m+"分"+s+"秒");      //new Date()の元データを保持      dateRaw = year2+'-'+month+'-'+day+' '+h+"h"+m+"m"+s+"s";      break;  }  return dateRaw;}/* fin dateClass *///JPEGfunction publishJpg (date, docPath, docName) {    folderName = docPath +"\/log\/view\/";  folderObj = new Folder (folderName);  flag = folderObj.exists; //フォルダの有無  if(flag == false){   folderObj.create(); //フォルダがない場合にフォルダを作成  }  //フォルダが存在している場合  fileName = docName.slice(0,-3) + "\_" + date;  filePath = folderName + fileName + ".jpg";  fileObj = new File(filePath);    var exportOptions = getJPEGOptions();  app.activeDocument.exportFile( fileObj, ExportType.JPEG, exportOptions );}function getJPEGOptions(){	var jpegExportOpts = new ExportOptionsJPEG();	//ExportOptionsJPEGを定義	var matteRGBColor = new RGBColor();			//マットカラーの指定RGB別	matteRGBColor.red = 255; 	matteRGBColor.green = 255; 	matteRGBColor.blue = 255;	jpegExportOpts.antiAliasing = true;			//アンチエイリアス：true,false	jpegExportOpts.artBoardClipping = true;		//アートボードサイズで？：true,false	jpegExportOpts.blurAmount = 0.0;			//ぼかし足し：0.0 to 2.0	jpegExportOpts.horizontalScale = 100.0; 		//横方向拡大縮小：100.0=100%	jpegExportOpts.matte = true;				//マット有り無し：true,false	jpegExportOpts.matteColor = matteRGBColor;	//マットの色：RGBColorで指定		jpegExportOpts.optimization = true;			//最適化する？：true,false	jpegExportOpts.qualitySetting = 80;			//画質は？：0 to 100	jpegExportOpts.saveAsHTML = false;			//HTMLも保存する？：true,false	jpegExportOpts.verticalScale = 100.0;		//縦方向拡大縮小：0.0 to 776.19	jpegExportOpts.typename = 'WEB';			//Read-only	return jpegExportOpts;					//jpegExportOptsを設定}//debugfunction alertObj(obj) {    var properties = '';    for (var prop in obj){        properties += prop + "=" + obj[prop] + "\n";    }    alert(properties);}   