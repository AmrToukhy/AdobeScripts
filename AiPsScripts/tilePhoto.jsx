/*    tilePhoto.jsx        ctrl+sでPNG画像をpngフォルダに自動吐き出し for MacPhotoshop    version: 0.9            Author : Takahiro Isihiyama    Mail : ishiyama@sirok.co.jp        導入方法:     1:スクリプトをhogehoge.jsxとして保存    2:Applications/Adobe Photoshop CS5.1/Presets/Scripts/ に移動    3:photoshopの キーボードショートカットのCTRL+S に割り当て        !ver0.9 bugReport!    **ドキュメントを保存してないとエラーが出ますが、ドキュメント保存をしていれば正常に動きます**   */#target photoshop//初期設定app.preferences.rulerUnits = Units.PIXELS;//メインfunction tilePhoto(){    baseObj = app.documents.add(640, 960, 72, "tilePhoto", NewDocumentMode.RGB, DocumentFill.TRANSPARENT);    folderObj = Folder.selectDialog("フォルダを選択してください");    if (!folderObj) return;       var w = 4;//横     var h = 5;//縦    var pWH = 140;    var mWH = 14;    var bX = 20; //基準点 x,y    var bY = 200;    var fileList = folderObj.getFiles("*.jpeg");        var i = 0;    for (y=0; y<h; y++){        for (x=0; x<w; x++){            fileObj = new File(fileList[i]);            open(fileObj);            activeDocument.resizeImage(pWH,pWH);            activeDocument.selection.selectAll();            activeDocument.selection.copy();            activeDocument.close(SaveOptions.DONOTSAVECHANGES);            activeDocument.paste();            x1 = parseFloat(activeDocument.activeLayer.bounds[0]);            y1 = parseFloat(activeDocument.activeLayer.bounds[1]);                        //相対位置でタイリング            activeDocument.activeLayer.translate(bX-x1+pWH*x+mWH*x, bY-y1+pWH*y+mWH*y);                        i++;            if (i >= fileList.length) return;        }    } }tilePhoto();    function main(){      //フォルダ内の画像をPhotoshopで開く    //var baseObj = app.documents.add(640, 960, 72, "tilePhoto", NewDocumentMode.RGB, DocumentFill.TRANSPARENT);    //fileOpen(baseObj);             return 0;}/* fin main *///フォルダ内の画像をPhotoshopで開くfunction fileOpen(a){    //ダイアログでフォルダを選択    var inputPath = Folder.selectDialog("画像が入っているフォルダを選択してください。");    if(inputPath != null){        //成功        var folderName = inputPath;        var fileList = new Folder (folderName).getFiles ("*.*");        for ( docNo = 0; docNo < fileList.length; docNo ++ ) {            var fileRef = new File(fileList[docNo]);            open (fileRef);//画像ファイルがphotoshopで読めなかった場合エラーが出る            resizePhoto();            copyPastePhoto(a);        }    }else{        //失敗        alert("画像を読み込めませんでした。");    }}//fileOpen fin//リサイズfunction resizePhoto(){    var docObj = activeDocument;    docObj.resizeImage("100px","100px");    return}//resizePhoto fin//ベースpsdにコピペfunction copyPastePhoto(bObj){    var tmpObj = activeDocument;    tmpObj.activeLayer.copy();    //tmpObj.selection.selectAll();    //tmpObj.selection.copy();    tmpObj.close(SaveOptions.DONOTSAVECHANGES);        //bObj.artLayers.add();    bObj.paste();    bObj.activeLayer.translate(10,10);        //bObj.activeLayer.translate(10,20);}//png保存function publishPng(docName){  folderName = docPath +"\/png\/";  folderObj = new Folder (folderName);  flag = folderObj.exists; //フォルダの有無  if(flag == false){   folderObj.create(); //フォルダがない場合にフォルダを作成  }  //フォルダが存在している場合  fileName = docName.slice(0,-4);  filePath = folderName + fileName + ".png";  //alert(filePath);  fileObj = new File(filePath);  pngOpt = new PNGSaveOptions();  pngOpt.interlaced = false; //インタレースなし  activeDocument.saveAs(fileObj, pngOpt, true, Extension.LOWERCASE);}//publishPng fin