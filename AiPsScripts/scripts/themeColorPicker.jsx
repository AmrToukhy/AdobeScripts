/*  themeColorPicker.jsx*/#target photoshop//初期設定//定規の単位をピクセルにpreferences.rulerUnits = Units.PIXELS;//描画色を黒、背景色を白にapp.foregroundColor.rgb.red = 0;app.foregroundColor.rgb.green = 0;app.foregroundColor.rgb.blue = 0;app.backgroundColor.rgb.red = 255;app.backgroundColor.rgb.green = 255;app.backgroundColor.rgb.blue = 255;var themeName = "my365"+".theme";var txt = ["background","p","a,a:link","a:visited","a:hover"];var dx = 10;var dy = 30;var i =0;CR = String.fromCharCode(13);//MakeDialogpickDialog = new Window('dialog','ThemeColors',[0,0,200,500]);pickDialog.center();//ボタン類pickDialog.cBtn0 = pickDialog.add("button",[dx,dy*i+10,dx+30,dy*i+35],0);pickDialog.sTxt0 = pickDialog.add("edittext",[dx+35, dy*i+10, dx+35+100, dy*i+35], txt[0]);pickDialog.cBtn0.onClick = function(){    ch = parseInt(this.text);    color = colorPick();    if(0!=color){ txt[ch] = "#"+color.hexValue; }    else{ txt[ch] = "Error!!"; }    pickDialog.sTxt0.text = txt[ch];};i++;pickDialog.cBtn1 = pickDialog.add("button",[dx,dy*i+10,dx+30,dy*i+35],1);pickDialog.sTxt1 = pickDialog.add("edittext",[dx+35, dy*i+10, dx+35+100, dy*i+35], txt[1]);pickDialog.cBtn1.onClick = function(){    ch = parseInt(this.text);    color = colorPick();    if(0!=color){ txt[ch] = "#"+color.hexValue; }    else{ txt[ch] = "Error!!"; }    pickDialog.sTxt1.text = txt[ch];};i++;pickDialog.cBtn2 = pickDialog.add("button",[dx,dy*i+10,dx+30,dy*i+35],2);pickDialog.sTxt2 = pickDialog.add("edittext",[dx+35, dy*i+10, dx+35+100, dy*i+35], txt[2]);pickDialog.cBtn2.onClick = function(){    ch = parseInt(this.text);    color = colorPick();    if(0!=color){ txt[ch] = "#"+color.hexValue; }    else{ txt[ch] = "Error!!"; }    pickDialog.sTxt2.text = txt[ch];};i++;pickDialog.cBtn3 = pickDialog.add("button",[dx,dy*i+10,dx+30,dy*i+35],3);pickDialog.sTxt3 = pickDialog.add("edittext",[dx+35, dy*i+10, dx+35+100, dy*i+35], txt[3]);pickDialog.cBtn3.onClick = function(){    ch = parseInt(this.text);    color = colorPick();    if(0!=color){ txt[ch] = "#"+color.hexValue; }    else{ txt[ch] = "Error!!"; }    pickDialog.sTxt3.text = txt[ch];};i++;pickDialog.cBtn4 = pickDialog.add("button",[dx,dy*i+10,dx+30,dy*i+35],4);pickDialog.sTxt4 = pickDialog.add("edittext",[dx+35, dy*i+10, dx+35+100, dy*i+35], txt[4]);pickDialog.cBtn4.onClick = function(){    ch = parseInt(this.text);    color = colorPick();    if(0!=color){ txt[ch] = "#"+color.hexValue; }    else{ txt[ch] = "Error!!"; }    pickDialog.sTxt4.text = txt[ch];};// キャンセルボタンが押されたらキャンセル処理（ESCキー含む）pickDialog.cclBtn = pickDialog.add("button", [10,200,95,200+30], "Cancel");// GenerateボタンpickDialog.genBtn = pickDialog.add("button", [105,200,190,200+30], "Generate");// クリックイベントpickDialog.cclBtn.onClick = function() {	pickDialog.close();}pickDialog.genBtn.onClick = function() {  pushCss();  pickDialog.close();}// Main// ダイアログを表示pickDialog.show();//CSS書き出しfunction pushCss(){  var outputPath = Folder.selectDialog("保存先のディレクトリを選択してください。");  var fileRef = new File(outputPath+"/"+themeName+".css");  if(fileRef.exists){    if(!confirm("同名のファイルがすでにあります.\n上書きしてよろしいですか?")){        return alert("ファイルの出力に失敗しました。");    };  }	flag = fileRef.open ("w","","");	if(flag)   {     author = String('\* Photoshop Theme Css Generator\. ' +CR+ '\* author: @t_ishiyama SIROK,Inc.' +CR+ '\* http\:\/\/takahiro\.me\/');    fileRef.encoding = "UTF8"; //文字コードをUTF-8に    fileRef.writeln('\@charset "UTF-8";');    fileRef.writeln('\/\*' +CR+ author +CR+ '\*\/');    fileRef.writeln('\/\* ' +themeName+ ' ThemeColorCss Start \*\/');    fileRef.writeln('\.ui\_bgColor\{' +CR+ 'background-color\:'+txt[0]+';'+CR+'\}\;');    fileRef.writeln('\/\* ' +themeName+ ' ThemeColorCss Fin \*\/');        //var txt = ["background","p","a,a:link","a:visited","a:hover"];	}  fileRef.close();  alert(themeName+".css が "+outputPath+"/ に生成されました。");}//colorPickerfunction colorPick(){  var cp = showColorPicker(pickForeground=true);  if(cp){     //Objに格納 r,g,b,hexValue;     var rgb = app.foregroundColor.rgb;     return rgb;  }else{     return 0;  }};//debugfunction alertObj(obj) {    var properties = '';    for (var prop in obj){        properties += prop + "=" + obj[prop] + "\n";    }    alert(properties);}   