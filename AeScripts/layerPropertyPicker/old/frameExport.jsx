/*  frameInfoExporter.jsx  アニメーションの抜き出し  ishiyama@sirok.co.jp  */#target 'aftereffects'function frameInfoExporter(){  var compName = app.project.activeItem.name;  var layer = app.project.activeItem.selectedLayers[0];  $.writeln(compName);     var fps = 1/15;  var fileObj = File.saveDialog("saveAnimation","*.txt","");  if (!fileObj) return $.writeln("終了");  var flag = fileObj.open("w","text","");  if (!flag) return $.writeln("ファイルが作成できませんでした");  total = app.project.activeItem.selectedLayers.length; //　選択項目の総数      for (count=0; count<total; count++)  {    sLayObj = app.project.activeItem.selectedLayers[count];    writeProp(sLayObj, "position");    writeProp(sLayObj, "anchorPoint");    writeProp(sLayObj, "scale");    writeProp(sLayObj, "rotation");    writeProp(sLayObj, "opacity");  }  fileObj.close();  alert("を保存しました");  $.writeln("保存が完了しました。");}/*writeProperty*/function writeProp(layObj, propName){    var tmpObj = layObj.property(propName);  $.writeln("#"+layObj.name+", "+propName);  for(i = layObj.inPoint; i<layObj.outPoint; i+=fps)  {    n = tmpObj.valueAtTime(i, false);    $.writeln(n);    //fileObj.writeln(n);  }}/*main*/$.writeln(debugMassage[0]);frameInfoExporter();var debugMassage = ["=================== START ===================","===================  END  ===================","============================================="];//debugfunction alertObj(obj) {    var properties = '';    for (var prop in obj){        properties += prop + "=" + obj[prop] + "\n";    }    alert(properties);}