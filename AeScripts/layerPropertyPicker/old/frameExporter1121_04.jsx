/*  frameInfoExporter.jsx ver0.9   アニメーショントランスフォーム情報の抜き出し  #親子関係が有る場合、親レイヤーから開始位置です    update : 2012/11/21  author : ishiyama@sirok.co.jp           http://takahiro.me  ©2012 SIROK,Inc. All Rights Reserved.   */#target 'aftereffects'/* frameInfoExporter.jsx */function frameInfoExporter(){    $.writeln(debugMessage[0] + "frameInfoExporter.jsx");//処理スタート  //global  //active.composition  frameInfoExporter.comp = app.project.activeItem;  //selected.layers  frameInfoExporter.layers = app.project.activeItem.selectedLayers;  //notselected  if(frameInfoExporter.layers.length < 0) return alert("書き出しに必要なレイヤーを選択してください");    /* write property method */  frameInfoExporter.writeProp = function(layObj, propName)  {    //コンポジションのフレームレート、    //対象のレイヤープロパティ、    //ワークエリアの情報を宣言    var fps = 1 / frameInfoExporter.comp.frameRate;    var tmpObj = layObj.property(propName);    var workAreaIn = frameInfoExporter.comp.workAreaStart;    var workAreaOut = frameInfoExporter.comp.workAreaDuration;    var layerName = layObj.name;            $.writeln("\nPropartyName : "+propName);    for(i = workAreaIn; i < workAreaOut; i+=fps)    {      n = tmpObj.valueAtTime(i, false);      $.writeln(n);      frameInfoExporter.fileObj.writeln(n);    }  };  /*write property method fin*/  //fileObj  frameInfoExporter.fileObj = File.saveDialog("保存するテキストファイル名を入れて下さい","*.txt");    if (!frameInfoExporter.fileObj) return $.writeln(debugMessage[3]);  var flag = frameInfoExporter.fileObj.open("w","txt");  alert(flag);  if (!flag) return $.writeln(debugMessage[3]);    var compWidth = frameInfoExporter.comp.width / 2;    //情報の取得  var selectLayTotal = frameInfoExporter.layers.length;  for (var i=0; i < selectLayTotal; i++)  {    selectLayObj = frameInfoExporter.layers[i];    //親レイヤーが無い場合はNull    //if(selectLayObj.parent.name != null) parentLayerName = selectLayObj.parent.name;        $.writeln(debugMessage[2]);    $.writeln("LayerName : " + selectLayObj.name);     frameInfoExporter.writeProp(selectLayObj, "position");    frameInfoExporter.writeProp(selectLayObj, "anchorPoint");    frameInfoExporter.writeProp(selectLayObj, "scale");    frameInfoExporter.writeProp(selectLayObj, "rotation");    //frameInfoExporter.writeProp(selectLayObj, "opacity");  }  frameInfoExporter.fileObj.close();    //通知  alert(frameInfoExporter.comp.name + "の情報を保存しました");  $.writeln(frameInfoExporter.comp.name + "の情報を保存しました");  return $.writeln(debugMessage[1]);}//debugvar debugMessage = [  "INFO : スクリプト開始 ",  "INFO : スクリプト終了 ",  "//========================================",  "INFO : 何らかの理由でファイルが作成できませんでした。"];//mainframeInfoExporter();function alertObj(obj) {    var properties = '';    for (var prop in obj){        properties += prop + "=" + obj[prop] + "\n";    }    alert(properties);}