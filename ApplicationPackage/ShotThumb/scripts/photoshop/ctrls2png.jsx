/*    Ctrls2PNG.jsx        ctrl+sでPNG画像をpngフォルダに自動吐き出し for MacPhotoshop    version: 1.1            Author : Takahiro Ishiyama    Mail : ishiyama@sirok.co.jp        導入方法:     1:スクリプトをhogehoge.jsxとして保存    2:Applications/Adobe Photoshop CS5.1/Presets/Scripts/ に移動    3:photoshopの キーボードショートカットのCTRL+S に割り当て        1.1 : 画像の保存先を共通パス化   *//*on run*///app.displayDialogs = DialogModes.NO; //不要なダイアログオフ#target "Photoshop"#include "ScriptListenerOn.jsx"log("INF : Scripts Start");/****************/function main(){    var appName = "Ps"; //photoshop   var userName = String(Folder.myDocuments.parent.fsName).slice(7);  var docObj = app.activeDocument; //ファイル情報取得  //alert(this.path);  //var docPath = docObj.path; //ファイルパス PS特殊  //if(docObj.artLayers.length == 1) return 0;  //else var docPath = docObj.path;    var docName = docObj.name; //ファイル名  var date = dateClass(); //現在時刻の取得  var logPath = "/Volumes/Macintosh\ HD/Production";  checkPath(logPath);    try{    putLog(date, logPath, docName, userName);//mac    //publishPng(date, logPath, docName, userName, appName); //PNGパブリッシュ    publishJpg(date, logPath, docName, userName, appName);  }  catch(err){      alert("err");  }  return log("INF : Scripts Fin"),0;}/* fin main *///chosoleLogfunction log(text){  /*  var CR = String.fromCharCode(10);    extensionPath = "/Volumes/Macintosh\ HD/Library/Application\ Support/Adobe/CS6ServiceManager/extensions/";  extensionId = "com.sirok.DebugPanel";  extensionContent = "/content/Configurator-Panel.assets/Html";  folderObj = new Folder(extensionPath + extensionId);    if(!folderObj.exists) return;  logPath = extensionPath + extensionId + extensionContent + "/log.txt";  fileObj = new File(logPath);    flg = fileObj.open("w",8,true);  if (flg)  {    fileObj.writeln(tmpText + text);    fileObj.close();  }  */  //$.writeln(text);    return;};//checkPathfunction checkPath(path){  var folderObj = new Folder (path);  //alert(folderObj.exists);  folderObj.create();  if(!folderObj.exists){    flag = folderObj.create();    if(!flag) return alert("ログ保存のための、" + path + " を作成できませんでした。管理者にお問い合わせ下さい。");    //フォルダがない場合にフォルダを作成    log("INF : Make Directory");    alert("ログ保存のため、" + path + " にフォルダを生成しました");  }else log("INF : Already Make Directory");  return 0;}//putLogfunction putLog(date, path, docName, userName){  var logHistoryPath = path +"\/log\/history\/";  checkPath(logHistoryPath);  //macListenerPath  var logFile = File("~/Desktop/ScriptingListenerJS.log");  logFile.open("r");  history = logFile.read();//.split(/\/\/\s\=+/);  var fileRef = new File(logHistoryPath+"/"+ date + "\_" + userName + "\_" + docName.slice(0,-4) + ".log");  fileRef.encoding = "UTF8"; //文字コードをUTF-8に  flag = fileRef.open ("w","","");	if(flag) fileRef.writeln(history);  logFile.remove();  fileRef.close();  return 0;} //現在時刻の取得function dateClass(){  dObj = new Date();  while((new Date()).getTime() < dObj.getTime() + 1000*5){ //timeOut5秒      year = dObj.getYear();      year2 = (year < 2000) ? year + 1900 : year;      month = dObj.getMonth() + 1;      day = dObj.getDate();      h = dObj.getHours();      m = dObj.getMinutes();      s = dObj.getSeconds();      dateRaw = year2+'-'+month+'-'+day+' '+h+"h"+m+"m"+s+"s";      break;  }  return dateRaw;}/* fin dateClass *///png保存function publishPng(date, path, docName, userName, appName){  var logViewPath = path +"\/log\/view\/";  checkPath(logViewPath);  fileName = date + "\_" + userName + "\_" + appName + "\_" + docName.slice(0,-4) + ".png";  filePath = logViewPath + fileName;  fileObj = new File(filePath);    var exportOptions = getPNGOptions();  app.activeDocument.exportDocument(fileObj, ExportType.SAVEFORWEB, exportOptions);  return 0;}//png保存function publishJpg(date, path, docName, userName, appName){  var logViewPath = path +"\/log\/view\/";  checkPath(logViewPath);  fileName = date + "\_" + userName + "\_" + appName + "\_" + docName.slice(0,-4) + ".png";  filePath = logViewPath + fileName;  fileObj = new File(filePath);    var jpegopt = new JPEGSaveOptions();  jpegopt.quality = 8; //0(low)～12(high);  activeDocument.saveAs(fileObj, jpegopt, true);  return 0;}//jpeg Optionsfunction getPNGOptions(){	var pngOpt = new ExportOptionsSaveForWeb();  pngOpt.format = SaveDocumentType.PNG;  pngOpt.quality = 100;  pngOpt.transparency = true;	return pngOpt;}//ドキュメントが開かれているかどうか判別if (app.documents.length == 0);else main();//メインを実行 //debugfunction alertObj(obj) {  var properties = '';  for (var prop in obj){      properties += prop + "=" + obj[prop] + "\n";  }  return alert(properties);}